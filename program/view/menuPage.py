# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'menuPage.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from taskPage import Ui_TaskPage
from info import Ui_InfoPage
from self_care_tips import Ui_SelfCarePage
from statistics import Ui_MainWindow as Ui_StatsPage  # Import Stats Page

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        # Setup main window properties
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1440, 900)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # Create grid layout for buttons
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(500, 360, 450, 200))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")

        # Create buttons for each page
        self.openStatsButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.openStatsButton.setObjectName("openStatsButton")
        self.styleButton(self.openStatsButton)
        self.gridLayout.addWidget(self.openStatsButton, 1, 0, 1, 1)

        self.openSelfCareButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.openSelfCareButton.setObjectName("openSelfCareButton")
        self.styleButton(self.openSelfCareButton)
        self.gridLayout.addWidget(self.openSelfCareButton, 0, 0, 1, 1)

        self.openTasksButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.openTasksButton.setObjectName("openTasksButton")
        self.styleButton(self.openTasksButton)
        self.gridLayout.addWidget(self.openTasksButton, 0, 1, 1, 1)

        self.openInfoButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.openInfoButton.setObjectName("openInfoButton")
        self.styleButton(self.openInfoButton)
        self.gridLayout.addWidget(self.openInfoButton, 1, 1, 1, 1)

        # Add labels to the central widget
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(560, 200, 350, 100))
        self.label.setObjectName("label")
        self.styleLabel(self.label)

        # Set the central widget for the MainWindow
        MainWindow.setCentralWidget(self.centralwidget)

        # Create menu bar and status bar
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1440, 24))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        # Retranslate UI to set text for elements
        self.retranslateUi(MainWindow)

        # Connect buttons to their respective functions
        self.connectSignals()

        # Connect slots for UI components
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        """Set the text for UI elements."""
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.openStatsButton.setText(_translate("MainWindow", "Statistics"))
        self.openSelfCareButton.setText(_translate("MainWindow", "Self Care Tips"))
        self.openTasksButton.setText(_translate("MainWindow", "To-Do List"))
        self.openInfoButton.setText(_translate("MainWindow", "Info Page"))
        self.label.setText(_translate("MainWindow", "TaskTally"))

    # Opens the task page
    def openTaskPage(self):
        """Opens the task page."""
        self.taskPage = QtWidgets.QMainWindow()
        self.ui_taskPage = Ui_TaskPage()
        self.ui_taskPage.setupUi(self.taskPage)
        self.taskPage.show()

    # Opens the info page
    def openInfoPage(self):
        """Opens the Info page."""
        self.infoPage = QtWidgets.QMainWindow()
        self.ui_infoPage = Ui_InfoPage()
        self.ui_infoPage.setupUi(self.infoPage)
        self.infoPage.show()

    # Opens the selfcare page
    def openSelfCarePage(self):
        """Opens the Self Care Tips page."""
        self.selfCarePage = QtWidgets.QMainWindow()
        self.ui_selfCarePage = Ui_SelfCarePage()
        self.ui_selfCarePage.setupUi(self.selfCarePage)
        self.selfCarePage.show()
    
    # Opens the statistics page
    def openStatsPage(self):
        """Opens the Statistics page."""
        self.statsPage = QtWidgets.QMainWindow()
        self.ui_statsPage = Ui_StatsPage()
        self.ui_statsPage.setupUi(self.statsPage)
        self.statsPage.show()

    def connectSignals(self):
        """Connects button clicks to functions."""
        self.openTasksButton.clicked.connect(self.openTaskPage)
        self.openInfoButton.clicked.connect(self.openInfoPage)
        self.openSelfCareButton.clicked.connect(self.openSelfCarePage)
        self.openStatsButton.clicked.connect(self.openStatsPage)
    
    def styleButton(self, button):
        """Styles the buttons with size, font, and border."""
        button.setMinimumSize(200, 60)
        button.setStyleSheet(
            "QPushButton {"
            "    font-size: 18pt;"
            "    font-weight: bold;"
            "    color: black;"
            "    border: 3px solid black;"
            "    border-radius: 10px;"
            "}"
            "QPushButton:hover {"
            "    background-color: #d3d3d3;"
            "}"
        )

    def styleLabel(self, label):
        """Styles the 'TaskTally' label."""
        label.setAlignment(QtCore.Qt.AlignCenter)
        label.setStyleSheet(
            "QLabel {"
            "    font-size: 36pt;"
            "    font-weight: bold;"
            "    color: black;"
            "    border: 3px solid black;"
            "    border-radius: 15px;"
            "    padding: 15px;"
            "}"
        )

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
